
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.pivotaltracker.api</groupId>
    <artifactId>java-api</artifactId>
    <packaging>jar</packaging>
    <version>1.0-SNAPSHOT</version>
    <name>java-api-readonly</name>
    <url>http://pivotal-tracker-java-api.googlecode.com</url>
	<!-- common library versions -->
    <properties>
        <spring.fw.version>3.0.1.RELEASE</spring.fw.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <slf4j.version>1.5.8</slf4j.version>
        <log4j.version>1.2.14</log4j.version>
        <junit.version>4.8.1</junit.version>
        <mockito.version>1.8.2</mockito.version>
        <compileSource>1.6</compileSource>
    </properties>

    <build>
        <pluginManagement>
            <plugins>
				<!--
					The Compiler Plugin is used to compile the sources of your project.
				-->
                <plugin>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>2.1</version>
                </plugin>

				<!-- This plugin provides the capability to build and sign jars. -->
                <plugin>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>2.3</version>
                </plugin>

				<!--
					The Source Plugin creates a jar archive of the source files of the
					current project.
				-->
                <plugin>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>2.1.1</version>
                </plugin>

				<!--
					The Eclipse Plugin is used to generate Eclipse IDE files
					(*.classpath, *.wtpmodules and the .settings folder) for use with a
					project.
				-->
                <plugin>
                    <artifactId>maven-eclipse-plugin</artifactId>
                    <version>2.8</version>
                </plugin>

				<!--
					The SCM Plugin offers vendor independent access to common scm
					commands by offering a set of command mappings for the configured
					scm.
				-->
                <plugin>
                    <artifactId>maven-scm-plugin</artifactId>
                    <version>1.3</version>
                </plugin>

				<!--
					The Checkstyle Plugin generates a report regarding the code style
					used by the developers.
				-->
                <plugin>
                    <artifactId>maven-checkstyle-plugin</artifactId>
                    <version>2.5</version>
                </plugin>

				<!--
					The JXR plugin produces a cross-reference of the project's sources.
					The generated reports make it easier for the user to reference or
					find specific lines of code.
				-->
                <plugin>
                    <artifactId>maven-jxr-plugin</artifactId>
                    <version>2.1</version>
                </plugin>

				<!--
					The Javadoc Plugin uses the Javadoc tool to generate javadocs for
					the specified project.
				-->
                <plugin>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>2.6.1</version>
                </plugin>

				<!--
					PMD scans Java source code and looks for potential problems like
					Possible bugs, Dead code, Suboptimal code, Overcomplicated
					expressions and Duplicate code
				-->
                <plugin>
                    <artifactId>maven-pmd-plugin</artifactId>
                    <version>2.4</version>
                </plugin>

				<!--
					FindBugs looks for bugs in Java programs. It is based on the
					concept of bug patterns. IE: difficult language features,
					misunderstood API methods, misunderstood invariants when code is
					modified during maintenance or garden variety mistakes: typos, use
					of the wrong boolean operator.
				-->
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>findbugs-maven-plugin</artifactId>
                    <version>2.0.1</version>
                </plugin>

				<!--
					The Cobertura plugin provides the features of Cobertura within the
					Maven 2 environment. Cobertura is a free Java tool that calculates
					the percentage of code accessed by tests.
				-->
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>cobertura-maven-plugin</artifactId>
                    <version>2.3</version>
                </plugin>

				<!--
					This mojo is designed to get a unique build number for each time
					you build your project. So while your version may remain constant
					at 1.0-SNAPSHOT for many iterations until release, you will have a
					build number that can uniquely identify each build during that
					time. The build number is obtained from scm, and in particular, at
					this time, from svn. You can then place that build number in
					metadata, which can be accessed from your app, if desired.
				-->
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>buildnumber-maven-plugin</artifactId>
                    <version>1.0-beta-4</version>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifestEntries>
                            <Version>${project.version}</Version>
                            <SCM-Revision>${buildNumber}</SCM-Revision>
                        </manifestEntries>
                    </archive>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>${compileSource}</source>
                    <target>${compileSource}</target>
                    <optimize>false</optimize>
                    <debug>true</debug>
                    <showDeprecation>true</showDeprecation>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-javadoc-plugin</artifactId>
                <executions>
                    <execution>
                        <id>attach-javadocs</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-eclipse-plugin</artifactId>
                <configuration>
                    <downloadJavadocs>true</downloadJavadocs>
                    <downloadSources>true</downloadSources>
                    <additionalProjectnatures>
                        <projectnature>org.springframework.ide.eclipse.core.springnature</projectnature>
                    </additionalProjectnatures>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-scm-plugin</artifactId>
                <configuration>
                    <connectionType>developerConnection</connectionType>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>buildnumber-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>validate</phase>
                        <goals>
                            <goal>create</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <doCheck>false</doCheck>
                    <doUpdate>true</doUpdate>
                </configuration>
            </plugin>
        </plugins>

		<!-- needed for SVN-deployment -->
        <extensions>
            <extension>
                <groupId>org.jvnet.wagon-svn</groupId>
                <artifactId>wagon-svn</artifactId>
                <version>1.9</version>
            </extension>
        </extensions>
    </build>
    <scm>
        <developerConnection>scm:svn:https://pivotal-tracker-java-api.googlecode.com/svn/trunk</developerConnection>
        <url>http://pivotal-tracker-java-api.googlecode.com/svn/trunk</url>
    </scm>

    <reporting>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <configuration>
                    <configLocation>http://oppna-program.googlecode.com/svn/dev-environment/checkstyle/sun_checks_vgr.xml</configLocation>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>cobertura-maven-plugin</artifactId>
                <configuration>
                    <formats>
                        <format>html</format>
                        <format>xml</format>
                    </formats>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jxr-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
                <configuration>
                    <targetJdk>${compileSource}</targetJdk>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>surefire-report-maven-plugin</artifactId>
                <inherited>true</inherited>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>findbugs-maven-plugin</artifactId>
                <configuration>
                    <findbugsXmlOutput>true</findbugsXmlOutput>
                    <findbugsXmlWithMessages>true</findbugsXmlWithMessages>
                    <xmlOutput>true</xmlOutput>
                </configuration>
            </plugin>
        </plugins>
    </reporting>

    <dependencies>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpcore</artifactId>
            <version>4.1</version>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>4.0.3</version>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpmime</artifactId>
            <version>4.0.3</version>
        </dependency>
        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
            <version>1.3</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <version>${spring.fw.version}</version>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>${log4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
            <version>2.4</version>
        </dependency>
        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <version>5.10</version>
            <scope>test</scope>
            <classifier>jdk15</classifier>
        </dependency>
        <dependency>
            <groupId>com.thoughtworks.xstream</groupId>
            <artifactId>xstream</artifactId>
            <version>1.3.1</version>
        </dependency>
        <dependency>
            <groupId>xpp3</groupId>
            <artifactId>xpp3_min</artifactId>
            <version>1.1.4c</version>
        </dependency>
    </dependencies>

    <distributionManagement>
        <repository>
            <id>svn-repo</id>
            <name>Pivotal Tracke Java Api Release Repo</name>
            <url>svn:https://pivotal-tracker-java-api.googlecode.com/svn/maven</url>
        </repository>
        <snapshotRepository>
            <id>svn-repo</id>
            <name>Pivotal Tracke Java Api Snapshot Repo</name>
            <url>svn:https://pivotal-tracker-java-api/svn/maven-snapshots</url>
        </snapshotRepository>
    </distributionManagement>

    <repositories>
        <repository>
            <id>atlassian-public</id>
            <url>https://maven.atlassian.com/repository/public</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
            <releases>
                <enabled>true</enabled>
            </releases>
        </repository>
        <repository>
            <id>repo1 maven</id>
            <url>http://repo1.maven.org/maven2/</url>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>atlassian-public</id>
            <url>https://maven.atlassian.com/repository/public</url>
        </pluginRepository>
    </pluginRepositories>

    <profiles>
        <profile>
	<!--
            The prod-profile is used when building production artifacts with
            securities (security.properties) included. NB! Never deploy to maven
            repo with this profile.
	-->
            <id>prod</id>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <configuration>
                            <optimize>true</optimize>
                            <debug>false</debug>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>netbeans-private-testng</id>
            <activation>
                <property>
                    <name>netbeans.testng.action</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>2.4.2</version>
                        <configuration>
                            <suiteXmlFiles>
                                <suiteXmlFile>target/nb-private/testng-suite.xml</suiteXmlFile>
                            </suiteXmlFiles>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>parametized-testing</id>
            <activation>
                <property>
                    <name>netbeans.testng.action</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <suiteXmlFiles>
                                <!--
                                you have to define the testng.xml file for example see
                                src/test/resources/testng-example.xml
                                -->
                                <suiteXmlFile>src/test/resources/testng.xml</suiteXmlFile>
                            </suiteXmlFiles>
                            <parallel>methods</parallel>
                            <threadCount>10</threadCount>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
